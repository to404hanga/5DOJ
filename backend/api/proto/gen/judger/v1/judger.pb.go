// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: judger/v1/judger.proto

package judgerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreheaterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     uint64                 `protobuf:"varint,1,opt,name=contestId,proto3" json:"contestId,omitempty"` // 比赛 ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreheaterRequest) Reset() {
	*x = PreheaterRequest{}
	mi := &file_judger_v1_judger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreheaterRequest) ProtoMessage() {}

func (x *PreheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judger_v1_judger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreheaterRequest.ProtoReflect.Descriptor instead.
func (*PreheaterRequest) Descriptor() ([]byte, []int) {
	return file_judger_v1_judger_proto_rawDescGZIP(), []int{0}
}

func (x *PreheaterRequest) GetContestId() uint64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

type PreheaterResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     uint64                 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`      // 题目 ID
	TestCasesIds  []string               `protobuf:"bytes,2,rep,name=testCasesIds,proto3" json:"testCasesIds,omitempty"` // 测试用例 ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreheaterResult) Reset() {
	*x = PreheaterResult{}
	mi := &file_judger_v1_judger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreheaterResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreheaterResult) ProtoMessage() {}

func (x *PreheaterResult) ProtoReflect() protoreflect.Message {
	mi := &file_judger_v1_judger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreheaterResult.ProtoReflect.Descriptor instead.
func (*PreheaterResult) Descriptor() ([]byte, []int) {
	return file_judger_v1_judger_proto_rawDescGZIP(), []int{1}
}

func (x *PreheaterResult) GetProblemId() uint64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *PreheaterResult) GetTestCasesIds() []string {
	if x != nil {
		return x.TestCasesIds
	}
	return nil
}

type PreheaterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*PreheaterResult     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // 预热结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreheaterResponse) Reset() {
	*x = PreheaterResponse{}
	mi := &file_judger_v1_judger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreheaterResponse) ProtoMessage() {}

func (x *PreheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_judger_v1_judger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreheaterResponse.ProtoReflect.Descriptor instead.
func (*PreheaterResponse) Descriptor() ([]byte, []int) {
	return file_judger_v1_judger_proto_rawDescGZIP(), []int{2}
}

func (x *PreheaterResponse) GetResults() []*PreheaterResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_judger_v1_judger_proto protoreflect.FileDescriptor

const file_judger_v1_judger_proto_rawDesc = "" +
	"\n" +
	"\x16judger/v1/judger.proto\x12\tjudger.v1\"0\n" +
	"\x10PreheaterRequest\x12\x1c\n" +
	"\tcontestId\x18\x01 \x01(\x04R\tcontestId\"S\n" +
	"\x0fPreheaterResult\x12\x1c\n" +
	"\tproblemId\x18\x01 \x01(\x04R\tproblemId\x12\"\n" +
	"\ftestCasesIds\x18\x02 \x03(\tR\ftestCasesIds\"I\n" +
	"\x11PreheaterResponse\x124\n" +
	"\aresults\x18\x01 \x03(\v2\x1a.judger.v1.PreheaterResultR\aresults2W\n" +
	"\rJudgerService\x12F\n" +
	"\tPreheater\x12\x1b.judger.v1.PreheaterRequest\x1a\x1c.judger.v1.PreheaterResponseB\x8b\x01\n" +
	"\rcom.judger.v1B\vJudgerProtoP\x01Z(backend/api/proto/gen/judger/v1;judgerv1\xa2\x02\x03JXX\xaa\x02\tJudger.V1\xca\x02\tJudger\\V1\xe2\x02\x15Judger\\V1\\GPBMetadata\xea\x02\n" +
	"Judger::V1b\x06proto3"

var (
	file_judger_v1_judger_proto_rawDescOnce sync.Once
	file_judger_v1_judger_proto_rawDescData []byte
)

func file_judger_v1_judger_proto_rawDescGZIP() []byte {
	file_judger_v1_judger_proto_rawDescOnce.Do(func() {
		file_judger_v1_judger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_judger_v1_judger_proto_rawDesc), len(file_judger_v1_judger_proto_rawDesc)))
	})
	return file_judger_v1_judger_proto_rawDescData
}

var file_judger_v1_judger_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_judger_v1_judger_proto_goTypes = []any{
	(*PreheaterRequest)(nil),  // 0: judger.v1.PreheaterRequest
	(*PreheaterResult)(nil),   // 1: judger.v1.PreheaterResult
	(*PreheaterResponse)(nil), // 2: judger.v1.PreheaterResponse
}
var file_judger_v1_judger_proto_depIdxs = []int32{
	1, // 0: judger.v1.PreheaterResponse.results:type_name -> judger.v1.PreheaterResult
	0, // 1: judger.v1.JudgerService.Preheater:input_type -> judger.v1.PreheaterRequest
	2, // 2: judger.v1.JudgerService.Preheater:output_type -> judger.v1.PreheaterResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_judger_v1_judger_proto_init() }
func file_judger_v1_judger_proto_init() {
	if File_judger_v1_judger_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_judger_v1_judger_proto_rawDesc), len(file_judger_v1_judger_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_judger_v1_judger_proto_goTypes,
		DependencyIndexes: file_judger_v1_judger_proto_depIdxs,
		MessageInfos:      file_judger_v1_judger_proto_msgTypes,
	}.Build()
	File_judger_v1_judger_proto = out.File
	file_judger_v1_judger_proto_goTypes = nil
	file_judger_v1_judger_proto_depIdxs = nil
}
